{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notification","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","fireStore","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userProfile","useFirestoreForProfile","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbconfig","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.03cad202.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return(\n            <ul className='right'>\n                <li><NavLink to='/create'>New Project</NavLink></li>\n                <li><a onClick={props.signOut}>Logout</a></li>\n                <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\n            </ul>\n    )\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err});\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(()=>{\n            dispatch({ type: 'LOGOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        });\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return(\n            <ul className='right'>\n                <li><NavLink to='/signup'>SignUp</NavLink></li>\n                <li><NavLink to='/signin'>Login</NavLink></li>\n            </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\n\nconst Navbar = (props) => {\n    const { auth,profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className='brand-logo'>Kaarya</Link>\n                { links }\n                \n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\nimport moment from 'moment';\n\nconst Notification = (props) => {\n    const { notifications } = props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-3\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(notification => {\n                            return(\n                                <li key={notification.id}>\n                                    <span className='pink-text'>{ notification.user } </span>\n                                    <span>{ notification.content }</span>\n                                    <div className=\"grey-text note-date\">\n                                        { moment(notification.time.toDate()).fromNow() }\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return(\n        <div className=\"card z-depth-3 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}.</span>\n                <p>Posted By: {project.authorFirstName +' '+ project.authorLastName }</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    \n    return(\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={'/projects/' + project.id }  key={project.id} >\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React, {Component} from 'react';\nimport Notification from './Notification';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component{\n    render(){\n        const { projects,auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signIn' />\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notification notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time','desc'] }\n    ])\n)(Dashboard)","import React from 'react'\nimport { compose } from 'redux';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if (!auth.uid) return <Redirect to='/signIn' />\n    if(project){\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{ project.title }</span>\n                        <p>{ project.content }</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName +' '+ project.authorLastName} </div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    else{\n        return(<div className=\"container center\">\n            <p>Loading Project...</p>\n        </div>)\n    }\n    \n}\nconst mapStateToProps = (state,ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id]: e.target.value  \n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError,auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Login\n                        </button>\n                        <div className=\"red-text center\">\n                            { authError ? authError : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (credentials) => dispatch(signIn(credentials))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id]: e.target.value  \n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Sign Up\n                        </button>\n                    </div>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{authError}</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport {createProject} from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id]: e.target.value  \n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signIn' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Project Title</label>\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">\n                            Create\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return{auth: state.firebase.auth}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch,getState, { getFirebase, getFirestore }) => {\n        const fireStore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        fireStore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(()=>{\n            dispatch({type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err });\n        })\n        \n    }\n};","import React, {Component} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/projects/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('Login failed')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'LOGOUT_SUCCESS':\n            console.log('logout success')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error',action.err)\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: 1, title: \"hello world\", content: \"hey sup!\"},\n        {id: 2, title: \"hell with u\", content: \"hey sup!\"},\n        {id: 3, title: \"hey Bbautiful\", content: \"hey sup!\"}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created proj',action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error',action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBeXEiqr7mcKkI5eKNm6fBjpv1zkvlruww\",\n  authDomain: \"project-management-43b92.firebaseapp.com\",\n  databaseURL: \"https://project-management-43b92.firebaseio.com\",\n  projectId: \"project-management-43b92\",\n  storageBucket: \"project-management-43b92.appspot.com\",\n  messagingSenderId: \"900108882513\",\n  appId: \"1:900108882513:web:40127cd21f7af719ca9e70\",\n  measurementId: \"G-SJV75GJTWX\",\n  userProfile: 'users',\n  useFirestoreForProfile: true\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport { getFirestore, reduxFirestore } from 'redux-firestore';\nimport fbconfig from './config/fbconfig';\nimport firebase from 'firebase/app';\n\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n  reactReduxFirebase(fbconfig, {useFirestoreForProfile: true,userProfile: 'users',attachAuthIsReady: true}),\n  reduxFirestore(fbconfig)\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider  store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}